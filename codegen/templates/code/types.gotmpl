package {{.Version}}

import (
    metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// {{.Kind}} is the Schema for the {{ .KindLowerCamel }} API
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status
// +kubebuilder:resource:path={{.KindLowerCamel}},scope=Namespaced
type {{.Kind}} struct {
    metav1.TypeMeta   `json:",inline"`
    metav1.ObjectMeta `json:"metadata,omitempty"`

    Spec   {{.Kind}}Spec   `json:"spec,omitempty"`
    Status {{.Kind}}Status `json:"status,omitempty"`
}

// {{.Kind}}Status defines an observed condition of {{.Kind}}
// +k8s:openapi-gen=true
type {{.Kind}}Status struct {
    // Phase represents the current state of the {{$.Kind}}.
    Phase {{$.Kind}}Phase `json:"phase,omitempty"`

    // ObservedGeneration was the last metadata.generation of the {{$.Kind}}
    // observed by the operator. If this does not match the metadata.generation of the {{$.Kind}},
    // it means the operator has not yet reconciled the current generation of the operator
    ObservedGeneration int64 `json:"observedGeneration,omitempty"`

    // StatusInfo defines the observed state of the {{$.Kind}} in the cluster
    {{$.Kind}}StatusInfo
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// {{.Kind}}List contains a list of {{.Kind}}
type {{.Kind}}List struct {
    metav1.TypeMeta `json:",inline"`
    metav1.ListMeta `json:"metadata,omitempty"`
    Items           []{{ .Kind }} `json:"items"`
}

func init() {
    SchemeBuilder.Register(&{{.Kind}}{}, &{{.Kind}}List{})
}
